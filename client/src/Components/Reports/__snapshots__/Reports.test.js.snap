// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Reports should match snapshot upon load 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Reports />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="dashboard"
>
          <div
                    className="total-samples"
          >
                    <h4>
                              Total
                    </h4>
                    <h3 />
                    <h4>
                              Samples
                    </h4>
          </div>
          <div
                    className="total-locations"
          >
                    <h4>
                              Total
                    </h4>
                    <h3 />
                    <h4>
                              Locations
                    </h4>
          </div>
          <div
                    className="avg-samples"
          >
                    <h4>
                              Average
                    </h4>
                    <h3>
                              NaN
                    </h3>
                    <h4>
                              Samples / Location
                    </h4>
          </div>
          <div
                    className="avg-reflectance"
          >
                    <h4>
                              Average
                    </h4>
                    <h3>
                              NaN
                    </h3>
                    <h4>
                              Reflectance
                    </h4>
          </div>
</div>,
        <form
          onSubmit={[Function]}
>
          <h3>
                    Choose a location:
          </h3>
          <div
                    className="choose-location"
          >
                    <DropDown
                              handleChange={[Function]}
                              name="country"
                              options={Array []}
                    />
                    <DropDown
                              handleChange={[Function]}
                              name="region"
                              options={Array []}
                    />
                    <DropDown
                              handleChange={[Function]}
                              name="coordinates"
                              options={Array []}
                    />
          </div>
          <h3>
                    Choose a date range:
          </h3>
          <div
                    className="choose-dates"
          >
                    <label
                              htmlFor="startDate"
                    >
                              Start
                    </label>
                    <input
                              autoComplete="off"
                              id="startDate"
                              name="startDate"
                              onChange={[Function]}
                              placeholder="mm/dd/yy"
                              type="text"
                              value=""
                    />
                    <label
                              htmlFor="endDate"
                    >
                              End
                    </label>
                    <input
                              autoComplete="off"
                              id="endDate"
                              name="endDate"
                              onChange={[Function]}
                              placeholder="mm/dd/yy"
                              type="text"
                              value=""
                    />
          </div>
          <button
                    type="submit"
          >
                    Generate Report
          </button>
</form>,
        false,
      ],
      "className": "Reports",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="total-samples"
>
              <h4>
                            Total
              </h4>
              <h3 />
              <h4>
                            Samples
              </h4>
</div>,
            <div
              className="total-locations"
>
              <h4>
                            Total
              </h4>
              <h3 />
              <h4>
                            Locations
              </h4>
</div>,
            <div
              className="avg-samples"
>
              <h4>
                            Average
              </h4>
              <h3>
                            NaN
              </h3>
              <h4>
                            Samples / Location
              </h4>
</div>,
            <div
              className="avg-reflectance"
>
              <h4>
                            Average
              </h4>
              <h3>
                            NaN
              </h3>
              <h4>
                            Reflectance
              </h4>
</div>,
          ],
          "className": "dashboard",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h4>
                  Total
</h4>,
                <h3 />,
                <h4>
                  Samples
</h4>,
              ],
              "className": "total-samples",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Total",
                },
                "ref": null,
                "rendered": "Total",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": 0,
                },
                "ref": null,
                "rendered": 0,
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Samples",
                },
                "ref": null,
                "rendered": "Samples",
                "type": "h4",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h4>
                  Total
</h4>,
                <h3 />,
                <h4>
                  Locations
</h4>,
              ],
              "className": "total-locations",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Total",
                },
                "ref": null,
                "rendered": "Total",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": 0,
                },
                "ref": null,
                "rendered": 0,
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Locations",
                },
                "ref": null,
                "rendered": "Locations",
                "type": "h4",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h4>
                  Average
</h4>,
                <h3>
                  NaN
</h3>,
                <h4>
                  Samples / Location
</h4>,
              ],
              "className": "avg-samples",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Average",
                },
                "ref": null,
                "rendered": "Average",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "NaN",
                },
                "ref": null,
                "rendered": "NaN",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Samples / Location",
                },
                "ref": null,
                "rendered": "Samples / Location",
                "type": "h4",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h4>
                  Average
</h4>,
                <h3>
                  NaN
</h3>,
                <h4>
                  Reflectance
</h4>,
              ],
              "className": "avg-reflectance",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Average",
                },
                "ref": null,
                "rendered": "Average",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "NaN",
                },
                "ref": null,
                "rendered": "NaN",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Reflectance",
                },
                "ref": null,
                "rendered": "Reflectance",
                "type": "h4",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3>
              Choose a location:
</h3>,
            <div
              className="choose-location"
>
              <DropDown
                            handleChange={[Function]}
                            name="country"
                            options={Array []}
              />
              <DropDown
                            handleChange={[Function]}
                            name="region"
                            options={Array []}
              />
              <DropDown
                            handleChange={[Function]}
                            name="coordinates"
                            options={Array []}
              />
</div>,
            <h3>
              Choose a date range:
</h3>,
            <div
              className="choose-dates"
>
              <label
                            htmlFor="startDate"
              >
                            Start
              </label>
              <input
                            autoComplete="off"
                            id="startDate"
                            name="startDate"
                            onChange={[Function]}
                            placeholder="mm/dd/yy"
                            type="text"
                            value=""
              />
              <label
                            htmlFor="endDate"
              >
                            End
              </label>
              <input
                            autoComplete="off"
                            id="endDate"
                            name="endDate"
                            onChange={[Function]}
                            placeholder="mm/dd/yy"
                            type="text"
                            value=""
              />
</div>,
            <button
              type="submit"
>
              Generate Report
</button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Choose a location:",
            },
            "ref": null,
            "rendered": "Choose a location:",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <DropDown
                  handleChange={[Function]}
                  name="country"
                  options={Array []}
/>,
                <DropDown
                  handleChange={[Function]}
                  name="region"
                  options={Array []}
/>,
                <DropDown
                  handleChange={[Function]}
                  name="coordinates"
                  options={Array []}
/>,
              ],
              "className": "choose-location",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "handleChange": [Function],
                  "name": "country",
                  "options": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "handleChange": [Function],
                  "name": "region",
                  "options": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "handleChange": [Function],
                  "name": "coordinates",
                  "options": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Choose a date range:",
            },
            "ref": null,
            "rendered": "Choose a date range:",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  htmlFor="startDate"
>
                  Start
</label>,
                <input
                  autoComplete="off"
                  id="startDate"
                  name="startDate"
                  onChange={[Function]}
                  placeholder="mm/dd/yy"
                  type="text"
                  value=""
/>,
                <label
                  htmlFor="endDate"
>
                  End
</label>,
                <input
                  autoComplete="off"
                  id="endDate"
                  name="endDate"
                  onChange={[Function]}
                  placeholder="mm/dd/yy"
                  type="text"
                  value=""
/>,
              ],
              "className": "choose-dates",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Start",
                  "htmlFor": "startDate",
                },
                "ref": null,
                "rendered": "Start",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "id": "startDate",
                  "name": "startDate",
                  "onChange": [Function],
                  "placeholder": "mm/dd/yy",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "End",
                  "htmlFor": "endDate",
                },
                "ref": null,
                "rendered": "End",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "id": "endDate",
                  "name": "endDate",
                  "onChange": [Function],
                  "placeholder": "mm/dd/yy",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Generate Report",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Generate Report",
            "type": "button",
          },
        ],
        "type": "form",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="dashboard"
>
            <div
                        className="total-samples"
            >
                        <h4>
                                    Total
                        </h4>
                        <h3 />
                        <h4>
                                    Samples
                        </h4>
            </div>
            <div
                        className="total-locations"
            >
                        <h4>
                                    Total
                        </h4>
                        <h3 />
                        <h4>
                                    Locations
                        </h4>
            </div>
            <div
                        className="avg-samples"
            >
                        <h4>
                                    Average
                        </h4>
                        <h3>
                                    NaN
                        </h3>
                        <h4>
                                    Samples / Location
                        </h4>
            </div>
            <div
                        className="avg-reflectance"
            >
                        <h4>
                                    Average
                        </h4>
                        <h3>
                                    NaN
                        </h3>
                        <h4>
                                    Reflectance
                        </h4>
            </div>
</div>,
          <form
            onSubmit={[Function]}
>
            <h3>
                        Choose a location:
            </h3>
            <div
                        className="choose-location"
            >
                        <DropDown
                                    handleChange={[Function]}
                                    name="country"
                                    options={Array []}
                        />
                        <DropDown
                                    handleChange={[Function]}
                                    name="region"
                                    options={Array []}
                        />
                        <DropDown
                                    handleChange={[Function]}
                                    name="coordinates"
                                    options={Array []}
                        />
            </div>
            <h3>
                        Choose a date range:
            </h3>
            <div
                        className="choose-dates"
            >
                        <label
                                    htmlFor="startDate"
                        >
                                    Start
                        </label>
                        <input
                                    autoComplete="off"
                                    id="startDate"
                                    name="startDate"
                                    onChange={[Function]}
                                    placeholder="mm/dd/yy"
                                    type="text"
                                    value=""
                        />
                        <label
                                    htmlFor="endDate"
                        >
                                    End
                        </label>
                        <input
                                    autoComplete="off"
                                    id="endDate"
                                    name="endDate"
                                    onChange={[Function]}
                                    placeholder="mm/dd/yy"
                                    type="text"
                                    value=""
                        />
            </div>
            <button
                        type="submit"
            >
                        Generate Report
            </button>
</form>,
          false,
        ],
        "className": "Reports",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="total-samples"
>
                <h4>
                                Total
                </h4>
                <h3 />
                <h4>
                                Samples
                </h4>
</div>,
              <div
                className="total-locations"
>
                <h4>
                                Total
                </h4>
                <h3 />
                <h4>
                                Locations
                </h4>
</div>,
              <div
                className="avg-samples"
>
                <h4>
                                Average
                </h4>
                <h3>
                                NaN
                </h3>
                <h4>
                                Samples / Location
                </h4>
</div>,
              <div
                className="avg-reflectance"
>
                <h4>
                                Average
                </h4>
                <h3>
                                NaN
                </h3>
                <h4>
                                Reflectance
                </h4>
</div>,
            ],
            "className": "dashboard",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h4>
                    Total
</h4>,
                  <h3 />,
                  <h4>
                    Samples
</h4>,
                ],
                "className": "total-samples",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Total",
                  },
                  "ref": null,
                  "rendered": "Total",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": 0,
                  },
                  "ref": null,
                  "rendered": 0,
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Samples",
                  },
                  "ref": null,
                  "rendered": "Samples",
                  "type": "h4",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h4>
                    Total
</h4>,
                  <h3 />,
                  <h4>
                    Locations
</h4>,
                ],
                "className": "total-locations",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Total",
                  },
                  "ref": null,
                  "rendered": "Total",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": 0,
                  },
                  "ref": null,
                  "rendered": 0,
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Locations",
                  },
                  "ref": null,
                  "rendered": "Locations",
                  "type": "h4",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h4>
                    Average
</h4>,
                  <h3>
                    NaN
</h3>,
                  <h4>
                    Samples / Location
</h4>,
                ],
                "className": "avg-samples",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Average",
                  },
                  "ref": null,
                  "rendered": "Average",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "NaN",
                  },
                  "ref": null,
                  "rendered": "NaN",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Samples / Location",
                  },
                  "ref": null,
                  "rendered": "Samples / Location",
                  "type": "h4",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h4>
                    Average
</h4>,
                  <h3>
                    NaN
</h3>,
                  <h4>
                    Reflectance
</h4>,
                ],
                "className": "avg-reflectance",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Average",
                  },
                  "ref": null,
                  "rendered": "Average",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "NaN",
                  },
                  "ref": null,
                  "rendered": "NaN",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Reflectance",
                  },
                  "ref": null,
                  "rendered": "Reflectance",
                  "type": "h4",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3>
                Choose a location:
</h3>,
              <div
                className="choose-location"
>
                <DropDown
                                handleChange={[Function]}
                                name="country"
                                options={Array []}
                />
                <DropDown
                                handleChange={[Function]}
                                name="region"
                                options={Array []}
                />
                <DropDown
                                handleChange={[Function]}
                                name="coordinates"
                                options={Array []}
                />
</div>,
              <h3>
                Choose a date range:
</h3>,
              <div
                className="choose-dates"
>
                <label
                                htmlFor="startDate"
                >
                                Start
                </label>
                <input
                                autoComplete="off"
                                id="startDate"
                                name="startDate"
                                onChange={[Function]}
                                placeholder="mm/dd/yy"
                                type="text"
                                value=""
                />
                <label
                                htmlFor="endDate"
                >
                                End
                </label>
                <input
                                autoComplete="off"
                                id="endDate"
                                name="endDate"
                                onChange={[Function]}
                                placeholder="mm/dd/yy"
                                type="text"
                                value=""
                />
</div>,
              <button
                type="submit"
>
                Generate Report
</button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Choose a location:",
              },
              "ref": null,
              "rendered": "Choose a location:",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <DropDown
                    handleChange={[Function]}
                    name="country"
                    options={Array []}
/>,
                  <DropDown
                    handleChange={[Function]}
                    name="region"
                    options={Array []}
/>,
                  <DropDown
                    handleChange={[Function]}
                    name="coordinates"
                    options={Array []}
/>,
                ],
                "className": "choose-location",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "handleChange": [Function],
                    "name": "country",
                    "options": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "handleChange": [Function],
                    "name": "region",
                    "options": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "handleChange": [Function],
                    "name": "coordinates",
                    "options": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Choose a date range:",
              },
              "ref": null,
              "rendered": "Choose a date range:",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="startDate"
>
                    Start
</label>,
                  <input
                    autoComplete="off"
                    id="startDate"
                    name="startDate"
                    onChange={[Function]}
                    placeholder="mm/dd/yy"
                    type="text"
                    value=""
/>,
                  <label
                    htmlFor="endDate"
>
                    End
</label>,
                  <input
                    autoComplete="off"
                    id="endDate"
                    name="endDate"
                    onChange={[Function]}
                    placeholder="mm/dd/yy"
                    type="text"
                    value=""
/>,
                ],
                "className": "choose-dates",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Start",
                    "htmlFor": "startDate",
                  },
                  "ref": null,
                  "rendered": "Start",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoComplete": "off",
                    "id": "startDate",
                    "name": "startDate",
                    "onChange": [Function],
                    "placeholder": "mm/dd/yy",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "End",
                    "htmlFor": "endDate",
                  },
                  "ref": null,
                  "rendered": "End",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoComplete": "off",
                    "id": "endDate",
                    "name": "endDate",
                    "onChange": [Function],
                    "placeholder": "mm/dd/yy",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Generate Report",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Generate Report",
              "type": "button",
            },
          ],
          "type": "form",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`Reports should match the snapshot when it has locations 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Reports />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="dashboard"
>
          <div
                    className="total-samples"
          >
                    <h4>
                              Total
                    </h4>
                    <h3 />
                    <h4>
                              Samples
                    </h4>
          </div>
          <div
                    className="total-locations"
          >
                    <h4>
                              Total
                    </h4>
                    <h3>
                              3
                    </h3>
                    <h4>
                              Locations
                    </h4>
          </div>
          <div
                    className="avg-samples"
          >
                    <h4>
                              Average
                    </h4>
                    <h3>
                              0.00
                    </h3>
                    <h4>
                              Samples / Location
                    </h4>
          </div>
          <div
                    className="avg-reflectance"
          >
                    <h4>
                              Average
                    </h4>
                    <h3>
                              NaN
                    </h3>
                    <h4>
                              Reflectance
                    </h4>
          </div>
</div>,
        <form
          onSubmit={[Function]}
>
          <h3>
                    Choose a location:
          </h3>
          <div
                    className="choose-location"
          >
                    <DropDown
                              handleChange={[Function]}
                              name="country"
                              options={
                                        Array [
                                                  "Argentina",
                                                  "Peru",
                                                ]
                              }
                    />
                    <DropDown
                              handleChange={[Function]}
                              name="region"
                              options={Array []}
                    />
                    <DropDown
                              handleChange={[Function]}
                              name="coordinates"
                              options={Array []}
                    />
          </div>
          <h3>
                    Choose a date range:
          </h3>
          <div
                    className="choose-dates"
          >
                    <label
                              htmlFor="startDate"
                    >
                              Start
                    </label>
                    <input
                              autoComplete="off"
                              id="startDate"
                              name="startDate"
                              onChange={[Function]}
                              placeholder="mm/dd/yy"
                              type="text"
                              value=""
                    />
                    <label
                              htmlFor="endDate"
                    >
                              End
                    </label>
                    <input
                              autoComplete="off"
                              id="endDate"
                              name="endDate"
                              onChange={[Function]}
                              placeholder="mm/dd/yy"
                              type="text"
                              value=""
                    />
          </div>
          <button
                    type="submit"
          >
                    Generate Report
          </button>
</form>,
        false,
      ],
      "className": "Reports",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="total-samples"
>
              <h4>
                            Total
              </h4>
              <h3 />
              <h4>
                            Samples
              </h4>
</div>,
            <div
              className="total-locations"
>
              <h4>
                            Total
              </h4>
              <h3>
                            3
              </h3>
              <h4>
                            Locations
              </h4>
</div>,
            <div
              className="avg-samples"
>
              <h4>
                            Average
              </h4>
              <h3>
                            0.00
              </h3>
              <h4>
                            Samples / Location
              </h4>
</div>,
            <div
              className="avg-reflectance"
>
              <h4>
                            Average
              </h4>
              <h3>
                            NaN
              </h3>
              <h4>
                            Reflectance
              </h4>
</div>,
          ],
          "className": "dashboard",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h4>
                  Total
</h4>,
                <h3 />,
                <h4>
                  Samples
</h4>,
              ],
              "className": "total-samples",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Total",
                },
                "ref": null,
                "rendered": "Total",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": 0,
                },
                "ref": null,
                "rendered": 0,
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Samples",
                },
                "ref": null,
                "rendered": "Samples",
                "type": "h4",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h4>
                  Total
</h4>,
                <h3>
                  3
</h3>,
                <h4>
                  Locations
</h4>,
              ],
              "className": "total-locations",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Total",
                },
                "ref": null,
                "rendered": "Total",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": 3,
                },
                "ref": null,
                "rendered": 3,
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Locations",
                },
                "ref": null,
                "rendered": "Locations",
                "type": "h4",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h4>
                  Average
</h4>,
                <h3>
                  0.00
</h3>,
                <h4>
                  Samples / Location
</h4>,
              ],
              "className": "avg-samples",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Average",
                },
                "ref": null,
                "rendered": "Average",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "0.00",
                },
                "ref": null,
                "rendered": "0.00",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Samples / Location",
                },
                "ref": null,
                "rendered": "Samples / Location",
                "type": "h4",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h4>
                  Average
</h4>,
                <h3>
                  NaN
</h3>,
                <h4>
                  Reflectance
</h4>,
              ],
              "className": "avg-reflectance",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Average",
                },
                "ref": null,
                "rendered": "Average",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "NaN",
                },
                "ref": null,
                "rendered": "NaN",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Reflectance",
                },
                "ref": null,
                "rendered": "Reflectance",
                "type": "h4",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3>
              Choose a location:
</h3>,
            <div
              className="choose-location"
>
              <DropDown
                            handleChange={[Function]}
                            name="country"
                            options={
                                          Array [
                                                        "Argentina",
                                                        "Peru",
                                                      ]
                            }
              />
              <DropDown
                            handleChange={[Function]}
                            name="region"
                            options={Array []}
              />
              <DropDown
                            handleChange={[Function]}
                            name="coordinates"
                            options={Array []}
              />
</div>,
            <h3>
              Choose a date range:
</h3>,
            <div
              className="choose-dates"
>
              <label
                            htmlFor="startDate"
              >
                            Start
              </label>
              <input
                            autoComplete="off"
                            id="startDate"
                            name="startDate"
                            onChange={[Function]}
                            placeholder="mm/dd/yy"
                            type="text"
                            value=""
              />
              <label
                            htmlFor="endDate"
              >
                            End
              </label>
              <input
                            autoComplete="off"
                            id="endDate"
                            name="endDate"
                            onChange={[Function]}
                            placeholder="mm/dd/yy"
                            type="text"
                            value=""
              />
</div>,
            <button
              type="submit"
>
              Generate Report
</button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Choose a location:",
            },
            "ref": null,
            "rendered": "Choose a location:",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <DropDown
                  handleChange={[Function]}
                  name="country"
                  options={
                                    Array [
                                                      "Argentina",
                                                      "Peru",
                                                    ]
                  }
/>,
                <DropDown
                  handleChange={[Function]}
                  name="region"
                  options={Array []}
/>,
                <DropDown
                  handleChange={[Function]}
                  name="coordinates"
                  options={Array []}
/>,
              ],
              "className": "choose-location",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "handleChange": [Function],
                  "name": "country",
                  "options": Array [
                    "Argentina",
                    "Peru",
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "handleChange": [Function],
                  "name": "region",
                  "options": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "handleChange": [Function],
                  "name": "coordinates",
                  "options": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Choose a date range:",
            },
            "ref": null,
            "rendered": "Choose a date range:",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  htmlFor="startDate"
>
                  Start
</label>,
                <input
                  autoComplete="off"
                  id="startDate"
                  name="startDate"
                  onChange={[Function]}
                  placeholder="mm/dd/yy"
                  type="text"
                  value=""
/>,
                <label
                  htmlFor="endDate"
>
                  End
</label>,
                <input
                  autoComplete="off"
                  id="endDate"
                  name="endDate"
                  onChange={[Function]}
                  placeholder="mm/dd/yy"
                  type="text"
                  value=""
/>,
              ],
              "className": "choose-dates",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Start",
                  "htmlFor": "startDate",
                },
                "ref": null,
                "rendered": "Start",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "id": "startDate",
                  "name": "startDate",
                  "onChange": [Function],
                  "placeholder": "mm/dd/yy",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "End",
                  "htmlFor": "endDate",
                },
                "ref": null,
                "rendered": "End",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "id": "endDate",
                  "name": "endDate",
                  "onChange": [Function],
                  "placeholder": "mm/dd/yy",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Generate Report",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Generate Report",
            "type": "button",
          },
        ],
        "type": "form",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="dashboard"
>
            <div
                        className="total-samples"
            >
                        <h4>
                                    Total
                        </h4>
                        <h3 />
                        <h4>
                                    Samples
                        </h4>
            </div>
            <div
                        className="total-locations"
            >
                        <h4>
                                    Total
                        </h4>
                        <h3>
                                    3
                        </h3>
                        <h4>
                                    Locations
                        </h4>
            </div>
            <div
                        className="avg-samples"
            >
                        <h4>
                                    Average
                        </h4>
                        <h3>
                                    0.00
                        </h3>
                        <h4>
                                    Samples / Location
                        </h4>
            </div>
            <div
                        className="avg-reflectance"
            >
                        <h4>
                                    Average
                        </h4>
                        <h3>
                                    NaN
                        </h3>
                        <h4>
                                    Reflectance
                        </h4>
            </div>
</div>,
          <form
            onSubmit={[Function]}
>
            <h3>
                        Choose a location:
            </h3>
            <div
                        className="choose-location"
            >
                        <DropDown
                                    handleChange={[Function]}
                                    name="country"
                                    options={
                                                Array [
                                                            "Argentina",
                                                            "Peru",
                                                          ]
                                    }
                        />
                        <DropDown
                                    handleChange={[Function]}
                                    name="region"
                                    options={Array []}
                        />
                        <DropDown
                                    handleChange={[Function]}
                                    name="coordinates"
                                    options={Array []}
                        />
            </div>
            <h3>
                        Choose a date range:
            </h3>
            <div
                        className="choose-dates"
            >
                        <label
                                    htmlFor="startDate"
                        >
                                    Start
                        </label>
                        <input
                                    autoComplete="off"
                                    id="startDate"
                                    name="startDate"
                                    onChange={[Function]}
                                    placeholder="mm/dd/yy"
                                    type="text"
                                    value=""
                        />
                        <label
                                    htmlFor="endDate"
                        >
                                    End
                        </label>
                        <input
                                    autoComplete="off"
                                    id="endDate"
                                    name="endDate"
                                    onChange={[Function]}
                                    placeholder="mm/dd/yy"
                                    type="text"
                                    value=""
                        />
            </div>
            <button
                        type="submit"
            >
                        Generate Report
            </button>
</form>,
          false,
        ],
        "className": "Reports",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="total-samples"
>
                <h4>
                                Total
                </h4>
                <h3 />
                <h4>
                                Samples
                </h4>
</div>,
              <div
                className="total-locations"
>
                <h4>
                                Total
                </h4>
                <h3>
                                3
                </h3>
                <h4>
                                Locations
                </h4>
</div>,
              <div
                className="avg-samples"
>
                <h4>
                                Average
                </h4>
                <h3>
                                0.00
                </h3>
                <h4>
                                Samples / Location
                </h4>
</div>,
              <div
                className="avg-reflectance"
>
                <h4>
                                Average
                </h4>
                <h3>
                                NaN
                </h3>
                <h4>
                                Reflectance
                </h4>
</div>,
            ],
            "className": "dashboard",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h4>
                    Total
</h4>,
                  <h3 />,
                  <h4>
                    Samples
</h4>,
                ],
                "className": "total-samples",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Total",
                  },
                  "ref": null,
                  "rendered": "Total",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": 0,
                  },
                  "ref": null,
                  "rendered": 0,
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Samples",
                  },
                  "ref": null,
                  "rendered": "Samples",
                  "type": "h4",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h4>
                    Total
</h4>,
                  <h3>
                    3
</h3>,
                  <h4>
                    Locations
</h4>,
                ],
                "className": "total-locations",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Total",
                  },
                  "ref": null,
                  "rendered": "Total",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": 3,
                  },
                  "ref": null,
                  "rendered": 3,
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Locations",
                  },
                  "ref": null,
                  "rendered": "Locations",
                  "type": "h4",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h4>
                    Average
</h4>,
                  <h3>
                    0.00
</h3>,
                  <h4>
                    Samples / Location
</h4>,
                ],
                "className": "avg-samples",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Average",
                  },
                  "ref": null,
                  "rendered": "Average",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0.00",
                  },
                  "ref": null,
                  "rendered": "0.00",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Samples / Location",
                  },
                  "ref": null,
                  "rendered": "Samples / Location",
                  "type": "h4",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h4>
                    Average
</h4>,
                  <h3>
                    NaN
</h3>,
                  <h4>
                    Reflectance
</h4>,
                ],
                "className": "avg-reflectance",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Average",
                  },
                  "ref": null,
                  "rendered": "Average",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "NaN",
                  },
                  "ref": null,
                  "rendered": "NaN",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Reflectance",
                  },
                  "ref": null,
                  "rendered": "Reflectance",
                  "type": "h4",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3>
                Choose a location:
</h3>,
              <div
                className="choose-location"
>
                <DropDown
                                handleChange={[Function]}
                                name="country"
                                options={
                                                Array [
                                                                "Argentina",
                                                                "Peru",
                                                              ]
                                }
                />
                <DropDown
                                handleChange={[Function]}
                                name="region"
                                options={Array []}
                />
                <DropDown
                                handleChange={[Function]}
                                name="coordinates"
                                options={Array []}
                />
</div>,
              <h3>
                Choose a date range:
</h3>,
              <div
                className="choose-dates"
>
                <label
                                htmlFor="startDate"
                >
                                Start
                </label>
                <input
                                autoComplete="off"
                                id="startDate"
                                name="startDate"
                                onChange={[Function]}
                                placeholder="mm/dd/yy"
                                type="text"
                                value=""
                />
                <label
                                htmlFor="endDate"
                >
                                End
                </label>
                <input
                                autoComplete="off"
                                id="endDate"
                                name="endDate"
                                onChange={[Function]}
                                placeholder="mm/dd/yy"
                                type="text"
                                value=""
                />
</div>,
              <button
                type="submit"
>
                Generate Report
</button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Choose a location:",
              },
              "ref": null,
              "rendered": "Choose a location:",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <DropDown
                    handleChange={[Function]}
                    name="country"
                    options={
                                        Array [
                                                            "Argentina",
                                                            "Peru",
                                                          ]
                    }
/>,
                  <DropDown
                    handleChange={[Function]}
                    name="region"
                    options={Array []}
/>,
                  <DropDown
                    handleChange={[Function]}
                    name="coordinates"
                    options={Array []}
/>,
                ],
                "className": "choose-location",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "handleChange": [Function],
                    "name": "country",
                    "options": Array [
                      "Argentina",
                      "Peru",
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "handleChange": [Function],
                    "name": "region",
                    "options": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "handleChange": [Function],
                    "name": "coordinates",
                    "options": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Choose a date range:",
              },
              "ref": null,
              "rendered": "Choose a date range:",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="startDate"
>
                    Start
</label>,
                  <input
                    autoComplete="off"
                    id="startDate"
                    name="startDate"
                    onChange={[Function]}
                    placeholder="mm/dd/yy"
                    type="text"
                    value=""
/>,
                  <label
                    htmlFor="endDate"
>
                    End
</label>,
                  <input
                    autoComplete="off"
                    id="endDate"
                    name="endDate"
                    onChange={[Function]}
                    placeholder="mm/dd/yy"
                    type="text"
                    value=""
/>,
                ],
                "className": "choose-dates",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Start",
                    "htmlFor": "startDate",
                  },
                  "ref": null,
                  "rendered": "Start",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoComplete": "off",
                    "id": "startDate",
                    "name": "startDate",
                    "onChange": [Function],
                    "placeholder": "mm/dd/yy",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "End",
                    "htmlFor": "endDate",
                  },
                  "ref": null,
                  "rendered": "End",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoComplete": "off",
                    "id": "endDate",
                    "name": "endDate",
                    "onChange": [Function],
                    "placeholder": "mm/dd/yy",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Generate Report",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Generate Report",
              "type": "button",
            },
          ],
          "type": "form",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
