// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataForm should match snapshot upon load 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DataForm
    handleChange={[Function]}
    handleClick={[Function]}
    sampleData={
        Array [
            Object {
              "date_collected": "",
              "name": "",
              "reflectance": "",
              "wavelength": "",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        Array [
          <div>
            <h4>
                        Data Point 
                        1
            </h4>
            <div
                        className="data-form-set 0"
            >
                        <input
                                    autoComplete="off"
                                    className="name"
                                    name="name"
                                    onChange={[Function]}
                                    placeholder="Name"
                                    type="text"
                                    value=""
                        />
                        <input
                                    autoComplete="off"
                                    name="date_collected"
                                    onChange={[Function]}
                                    placeholder="Date collected (mm/dd/yy)"
                                    type="text"
                                    value=""
                        />
                        <input
                                    autoComplete="off"
                                    name="reflectance"
                                    onChange={[Function]}
                                    placeholder="Reflectance"
                                    type="text"
                                    value=""
                        />
                        <input
                                    autoComplete="off"
                                    name="wavelength"
                                    onChange={[Function]}
                                    placeholder="Wavelength"
                                    type="text"
                                    value=""
                        />
            </div>
</div>,
        ],
        <div
          className="add-remove-buttons"
>
          <button
                    onClick={[Function]}
          >
                    Add Data
          </button>
          <button
                    onClick={[Function]}
          >
                    Remove
          </button>
</div>,
      ],
      "className": "DataForm",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Data Point 
              1
</h4>,
            <div
              className="data-form-set 0"
>
              <input
                            autoComplete="off"
                            className="name"
                            name="name"
                            onChange={[Function]}
                            placeholder="Name"
                            type="text"
                            value=""
              />
              <input
                            autoComplete="off"
                            name="date_collected"
                            onChange={[Function]}
                            placeholder="Date collected (mm/dd/yy)"
                            type="text"
                            value=""
              />
              <input
                            autoComplete="off"
                            name="reflectance"
                            onChange={[Function]}
                            placeholder="Reflectance"
                            type="text"
                            value=""
              />
              <input
                            autoComplete="off"
                            name="wavelength"
                            onChange={[Function]}
                            placeholder="Wavelength"
                            type="text"
                            value=""
              />
</div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Data Point ",
                1,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Data Point ",
              1,
            ],
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  autoComplete="off"
                  className="name"
                  name="name"
                  onChange={[Function]}
                  placeholder="Name"
                  type="text"
                  value=""
/>,
                <input
                  autoComplete="off"
                  name="date_collected"
                  onChange={[Function]}
                  placeholder="Date collected (mm/dd/yy)"
                  type="text"
                  value=""
/>,
                <input
                  autoComplete="off"
                  name="reflectance"
                  onChange={[Function]}
                  placeholder="Reflectance"
                  type="text"
                  value=""
/>,
                <input
                  autoComplete="off"
                  name="wavelength"
                  onChange={[Function]}
                  placeholder="Wavelength"
                  type="text"
                  value=""
/>,
              ],
              "className": "data-form-set 0",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "className": "name",
                  "name": "name",
                  "onChange": [Function],
                  "placeholder": "Name",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "name": "date_collected",
                  "onChange": [Function],
                  "placeholder": "Date collected (mm/dd/yy)",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "name": "reflectance",
                  "onChange": [Function],
                  "placeholder": "Reflectance",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "name": "wavelength",
                  "onChange": [Function],
                  "placeholder": "Wavelength",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              onClick={[Function]}
>
              Add Data
</button>,
            <button
              onClick={[Function]}
>
              Remove
</button>,
          ],
          "className": "add-remove-buttons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add Data",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Add Data",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Remove",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Remove",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <div>
              <h4>
                            Data Point 
                            1
              </h4>
              <div
                            className="data-form-set 0"
              >
                            <input
                                          autoComplete="off"
                                          className="name"
                                          name="name"
                                          onChange={[Function]}
                                          placeholder="Name"
                                          type="text"
                                          value=""
                            />
                            <input
                                          autoComplete="off"
                                          name="date_collected"
                                          onChange={[Function]}
                                          placeholder="Date collected (mm/dd/yy)"
                                          type="text"
                                          value=""
                            />
                            <input
                                          autoComplete="off"
                                          name="reflectance"
                                          onChange={[Function]}
                                          placeholder="Reflectance"
                                          type="text"
                                          value=""
                            />
                            <input
                                          autoComplete="off"
                                          name="wavelength"
                                          onChange={[Function]}
                                          placeholder="Wavelength"
                                          type="text"
                                          value=""
                            />
              </div>
</div>,
          ],
          <div
            className="add-remove-buttons"
>
            <button
                        onClick={[Function]}
            >
                        Add Data
            </button>
            <button
                        onClick={[Function]}
            >
                        Remove
            </button>
</div>,
        ],
        "className": "DataForm",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Data Point 
                1
</h4>,
              <div
                className="data-form-set 0"
>
                <input
                                autoComplete="off"
                                className="name"
                                name="name"
                                onChange={[Function]}
                                placeholder="Name"
                                type="text"
                                value=""
                />
                <input
                                autoComplete="off"
                                name="date_collected"
                                onChange={[Function]}
                                placeholder="Date collected (mm/dd/yy)"
                                type="text"
                                value=""
                />
                <input
                                autoComplete="off"
                                name="reflectance"
                                onChange={[Function]}
                                placeholder="Reflectance"
                                type="text"
                                value=""
                />
                <input
                                autoComplete="off"
                                name="wavelength"
                                onChange={[Function]}
                                placeholder="Wavelength"
                                type="text"
                                value=""
                />
</div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Data Point ",
                  1,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Data Point ",
                1,
              ],
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    autoComplete="off"
                    className="name"
                    name="name"
                    onChange={[Function]}
                    placeholder="Name"
                    type="text"
                    value=""
/>,
                  <input
                    autoComplete="off"
                    name="date_collected"
                    onChange={[Function]}
                    placeholder="Date collected (mm/dd/yy)"
                    type="text"
                    value=""
/>,
                  <input
                    autoComplete="off"
                    name="reflectance"
                    onChange={[Function]}
                    placeholder="Reflectance"
                    type="text"
                    value=""
/>,
                  <input
                    autoComplete="off"
                    name="wavelength"
                    onChange={[Function]}
                    placeholder="Wavelength"
                    type="text"
                    value=""
/>,
                ],
                "className": "data-form-set 0",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoComplete": "off",
                    "className": "name",
                    "name": "name",
                    "onChange": [Function],
                    "placeholder": "Name",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoComplete": "off",
                    "name": "date_collected",
                    "onChange": [Function],
                    "placeholder": "Date collected (mm/dd/yy)",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoComplete": "off",
                    "name": "reflectance",
                    "onChange": [Function],
                    "placeholder": "Reflectance",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoComplete": "off",
                    "name": "wavelength",
                    "onChange": [Function],
                    "placeholder": "Wavelength",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                onClick={[Function]}
>
                Add Data
</button>,
              <button
                onClick={[Function]}
>
                Remove
</button>,
            ],
            "className": "add-remove-buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add Data",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Add Data",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Remove",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Remove",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
